import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.11"
        classpath 'net.sf.proguard:proguard-gradle:5.3.3'
    }
}

plugins {
    id "org.sonarqube" version "2.6"
}

group 'com.rox'
version '1.0-SNAPSHOT'
description '6502 Emulator'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'application'
apply plugin: 'idea'

mainClassName = 'com.rox.emu.processor.mos6502.dbg.ui.DebuggerWindow'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.11'

    testImplementation group: 'junit', name: 'junit', version: '4.11'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testImplementation group: 'org.quicktheories', name: 'quicktheories', version: '0.13'
    testImplementation group: 'com.github.richard-melvin', name: 'junit-theory-suite', version: '1.0.0'

    testImplementation group: 'com.pholser', name: 'junit-quickcheck-core', version: '0.8-alpha-7'
    testImplementation group: 'com.pholser', name: 'junit-quickcheck-generators', version: '0.8-alpha-7'

    testImplementation group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4-rc-1'
    testImplementation group: 'com.nagternal', name : 'spock-genesis', version: '0.6.0'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

    implementation group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'
    implementation group: 'org.slf4j', name:'slf4j-log4j12', version: '1.7.2'
}

jacocoTestReport {
    reports {
        xml {
            enabled true
            destination file("jacocoTestReport.xml")
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                     exclude: ['**/ui/**'])
        }))
    }
}

pitest {
    excludedClasses = ['com.rox.emu.processor.mos6502.dbg.ui.*']
    outputFormats = ['HTML']
    timestampedReports = false
    //mutators = ['ALL']
}

task runDebugUI(type: JavaExec, group: 'application') {
    doFirst {
        println "Running Debugger UI for ${project.name}"
        classpath sourceSets.main.runtimeClasspath
        main = mainClassName
    }
}

jar {
    //Include third party dependencies
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes 'Main-Class': 'com.rox.emu.processor.mos6502.dbg.ui.DebuggerWindow'
    }
}

task obfuscatedJar(dependsOn: 'jar', type: ProGuardTask) {
    configuration 'src/main/resources/proguard.config'

    injars "build/libs/${rootProject.name}-${version}.jar"
    outjars "build/libs/${rootProject.name}-1.0.jar"
}
 
